/**
 * STARFACE Rest Api
 * A Rest API for STARFACE
 *
 * OpenAPI spec version: 6.7.0.22
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.8
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Voicemailbox', 'model/VoicemailboxListItem'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/Voicemailbox'), require('../model/VoicemailboxListItem'));
  } else {
    // Browser globals (root is window)
    if (!root.StarfaceRestApi) {
      root.StarfaceRestApi = {};
    }
    root.StarfaceRestApi.VoicemailBoxesApi = factory(root.StarfaceRestApi.ApiClient, root.StarfaceRestApi.Voicemailbox, root.StarfaceRestApi.VoicemailboxListItem);
  }
}(this, function(ApiClient, Voicemailbox, VoicemailboxListItem) {
  'use strict';

  /**
   * VoicemailBoxes service.
   * @module api/VoicemailBoxesApi
   * @version 6.7.0.22
   */

  /**
   * Constructs a new VoicemailBoxesApi. 
   * @alias module:api/VoicemailBoxesApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the createVoicemailbox operation.
     * @callback module:api/VoicemailBoxesApi~createVoicemailboxCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a new voicemailbox
     * Create a STARFACE voicemailbox.
     * @param {module:model/Voicemailbox} voicemailbox Voicemailbox to save.
     * @param {module:api/VoicemailBoxesApi~createVoicemailboxCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.createVoicemailbox = function(voicemailbox, callback) {
      var postBody = voicemailbox;

      // verify the required parameter 'voicemailbox' is set
      if (voicemailbox === undefined || voicemailbox === null) {
        throw new Error("Missing the required parameter 'voicemailbox' when calling createVoicemailbox");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/voicemailboxes', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteVoicemailbox operation.
     * @callback module:api/VoicemailBoxesApi~deleteVoicemailboxCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a voicemailbox with id
     * Delete a STARFACE voicemailbox.
     * @param {Number} voicemailboxid Id of the voicemailbox.
     * @param {module:api/VoicemailBoxesApi~deleteVoicemailboxCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.deleteVoicemailbox = function(voicemailboxid, callback) {
      var postBody = null;

      // verify the required parameter 'voicemailboxid' is set
      if (voicemailboxid === undefined || voicemailboxid === null) {
        throw new Error("Missing the required parameter 'voicemailboxid' when calling deleteVoicemailbox");
      }


      var pathParams = {
        'voicemailboxid': voicemailboxid
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/voicemailboxes/{voicemailboxid}', 'DELETE',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getVoicemailbox operation.
     * @callback module:api/VoicemailBoxesApi~getVoicemailboxCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Voicemailbox} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve a voicemailbox with id
     * Retrieve a list of STARFACE voicemailboxes the current user can access.
     * @param {Number} voicemailboxid Id of the voicemailbox.
     * @param {module:api/VoicemailBoxesApi~getVoicemailboxCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Voicemailbox}
     */
    this.getVoicemailbox = function(voicemailboxid, callback) {
      var postBody = null;

      // verify the required parameter 'voicemailboxid' is set
      if (voicemailboxid === undefined || voicemailboxid === null) {
        throw new Error("Missing the required parameter 'voicemailboxid' when calling getVoicemailbox");
      }


      var pathParams = {
        'voicemailboxid': voicemailboxid
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Voicemailbox;

      return this.apiClient.callApi(
        '/voicemailboxes/{voicemailboxid}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getVoicemailboxes operation.
     * @callback module:api/VoicemailBoxesApi~getVoicemailboxesCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/VoicemailboxListItem>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve a list of voicemailboxes
     * Retrieve a list of STARFACE voicemailboxes the current user can access.
     * @param {Object} opts Optional parameters
     * @param {String} opts.searchTerm The searchTerm to query voicemailboxes.
     * @param {module:api/VoicemailBoxesApi~getVoicemailboxesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/VoicemailboxListItem>}
     */
    this.getVoicemailboxes = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'searchTerm': opts['searchTerm'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = [VoicemailboxListItem];

      return this.apiClient.callApi(
        '/voicemailboxes', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the saveVoicemailbox operation.
     * @callback module:api/VoicemailBoxesApi~saveVoicemailboxCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Save a voicemailbox
     * Save a STARFACE voicemailbox.
     * @param {module:model/Voicemailbox} voicemailbox Voicemailbox to save.
     * @param {module:api/VoicemailBoxesApi~saveVoicemailboxCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.saveVoicemailbox = function(voicemailbox, callback) {
      var postBody = voicemailbox;

      // verify the required parameter 'voicemailbox' is set
      if (voicemailbox === undefined || voicemailbox === null) {
        throw new Error("Missing the required parameter 'voicemailbox' when calling saveVoicemailbox");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/voicemailboxes', 'PUT',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
