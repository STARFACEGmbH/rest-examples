/**
 * STARFACE Rest Api
 * A Rest API for STARFACE
 *
 * OpenAPI spec version: 6.7.0.22
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.8
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ManagedConferenceParticipant'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./ManagedConferenceParticipant'));
  } else {
    // Browser globals (root is window)
    if (!root.StarfaceRestApi) {
      root.StarfaceRestApi = {};
    }
    root.StarfaceRestApi.ManagedConference = factory(root.StarfaceRestApi.ApiClient, root.StarfaceRestApi.ManagedConferenceParticipant);
  }
}(this, function(ApiClient, ManagedConferenceParticipant) {
  'use strict';




  /**
   * The ManagedConference model module.
   * @module model/ManagedConference
   * @version 6.7.0.22
   */

  /**
   * Constructs a new <code>ManagedConference</code>.
   * A representation of a STARFACE conference
   * @alias module:model/ManagedConference
   * @class
   * @param eMailBody {String} 
   * @param name {String} 
   * @param occurrence {module:model/ManagedConference.OccurrenceEnum} 
   * @param startTime {Number} 
   */
  var exports = function(eMailBody, name, occurrence, startTime) {
    var _this = this;


    _this['eMailBody'] = eMailBody;
    _this['name'] = name;
    _this['occurrence'] = occurrence;

    _this['startTime'] = startTime;
  };

  /**
   * Constructs a <code>ManagedConference</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ManagedConference} obj Optional instance to populate.
   * @return {module:model/ManagedConference} The populated <code>ManagedConference</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('conferenceId')) {
        obj['conferenceId'] = ApiClient.convertToType(data['conferenceId'], 'Number');
      }
      if (data.hasOwnProperty('eMailBody')) {
        obj['eMailBody'] = ApiClient.convertToType(data['eMailBody'], 'String');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('occurrence')) {
        obj['occurrence'] = ApiClient.convertToType(data['occurrence'], 'String');
      }
      if (data.hasOwnProperty('participants')) {
        obj['participants'] = ApiClient.convertToType(data['participants'], [ManagedConferenceParticipant]);
      }
      if (data.hasOwnProperty('startTime')) {
        obj['startTime'] = ApiClient.convertToType(data['startTime'], 'Number');
      }
    }
    return obj;
  }

  /**
   * @member {Number} conferenceId
   */
  exports.prototype['conferenceId'] = undefined;
  /**
   * @member {String} eMailBody
   */
  exports.prototype['eMailBody'] = undefined;
  /**
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * @member {module:model/ManagedConference.OccurrenceEnum} occurrence
   */
  exports.prototype['occurrence'] = undefined;
  /**
   * @member {Array.<module:model/ManagedConferenceParticipant>} participants
   */
  exports.prototype['participants'] = undefined;
  /**
   * @member {Number} startTime
   */
  exports.prototype['startTime'] = undefined;


  /**
   * Allowed values for the <code>occurrence</code> property.
   * @enum {String}
   * @readonly
   */
  exports.OccurrenceEnum = {
    /**
     * value: "ONCE"
     * @const
     */
    "ONCE": "ONCE",
    /**
     * value: "EVERYDAY"
     * @const
     */
    "EVERYDAY": "EVERYDAY",
    /**
     * value: "EVERYWEEK"
     * @const
     */
    "EVERYWEEK": "EVERYWEEK",
    /**
     * value: "EVERYMONTH"
     * @const
     */
    "EVERYMONTH": "EVERYMONTH"  };


  return exports;
}));


