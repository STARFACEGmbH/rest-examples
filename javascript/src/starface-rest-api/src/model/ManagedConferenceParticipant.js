/**
 * STARFACE Rest Api
 * A Rest API for STARFACE
 *
 * OpenAPI spec version: 6.7.0.22
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.8
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.StarfaceRestApi) {
      root.StarfaceRestApi = {};
    }
    root.StarfaceRestApi.ManagedConferenceParticipant = factory(root.StarfaceRestApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The ManagedConferenceParticipant model module.
   * @module model/ManagedConferenceParticipant
   * @version 6.7.0.22
   */

  /**
   * Constructs a new <code>ManagedConferenceParticipant</code>.
   * A representation of STARFACE managed conference participant
   * @alias module:model/ManagedConferenceParticipant
   * @class
   * @param callOnStart {Boolean} 
   * @param displayName {String} 
   * @param isModerator {Boolean} 
   * @param phoneNumber {String} 
   * @param userId {Number} 
   */
  var exports = function(callOnStart, displayName, isModerator, phoneNumber, userId) {
    var _this = this;

    _this['callOnStart'] = callOnStart;
    _this['displayName'] = displayName;

    _this['isModerator'] = isModerator;

    _this['phoneNumber'] = phoneNumber;
    _this['userId'] = userId;
  };

  /**
   * Constructs a <code>ManagedConferenceParticipant</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ManagedConferenceParticipant} obj Optional instance to populate.
   * @return {module:model/ManagedConferenceParticipant} The populated <code>ManagedConferenceParticipant</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('callOnStart')) {
        obj['callOnStart'] = ApiClient.convertToType(data['callOnStart'], 'Boolean');
      }
      if (data.hasOwnProperty('displayName')) {
        obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
      }
      if (data.hasOwnProperty('eMailAddress')) {
        obj['eMailAddress'] = ApiClient.convertToType(data['eMailAddress'], 'String');
      }
      if (data.hasOwnProperty('isModerator')) {
        obj['isModerator'] = ApiClient.convertToType(data['isModerator'], 'Boolean');
      }
      if (data.hasOwnProperty('participantId')) {
        obj['participantId'] = ApiClient.convertToType(data['participantId'], 'Number');
      }
      if (data.hasOwnProperty('phoneNumber')) {
        obj['phoneNumber'] = ApiClient.convertToType(data['phoneNumber'], 'String');
      }
      if (data.hasOwnProperty('userId')) {
        obj['userId'] = ApiClient.convertToType(data['userId'], 'Number');
      }
    }
    return obj;
  }

  /**
   * @member {Boolean} callOnStart
   */
  exports.prototype['callOnStart'] = undefined;
  /**
   * @member {String} displayName
   */
  exports.prototype['displayName'] = undefined;
  /**
   * @member {String} eMailAddress
   */
  exports.prototype['eMailAddress'] = undefined;
  /**
   * @member {Boolean} isModerator
   */
  exports.prototype['isModerator'] = undefined;
  /**
   * @member {Number} participantId
   */
  exports.prototype['participantId'] = undefined;
  /**
   * @member {String} phoneNumber
   */
  exports.prototype['phoneNumber'] = undefined;
  /**
   * @member {Number} userId
   */
  exports.prototype['userId'] = undefined;



  return exports;
}));


