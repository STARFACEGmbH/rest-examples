/**
 * STARFACE Rest Api
 * A Rest API for STARFACE
 *
 * OpenAPI spec version: 6.7.0.22
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.8
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/TimeFrame'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./TimeFrame'));
  } else {
    // Browser globals (root is window)
    if (!root.StarfaceRestApi) {
      root.StarfaceRestApi = {};
    }
    root.StarfaceRestApi.FmcPhone = factory(root.StarfaceRestApi.ApiClient, root.StarfaceRestApi.TimeFrame);
  }
}(this, function(ApiClient, TimeFrame) {
  'use strict';




  /**
   * The FmcPhone model module.
   * @module model/FmcPhone
   * @version 6.7.0.22
   */

  /**
   * Constructs a new <code>FmcPhone</code>.
   * A representation of an FmcPhone
   * @alias module:model/FmcPhone
   * @class
   * @param active {Boolean} whether this FmcPhone is activated or deactivated
   * @param confirm {Boolean} whether the user must confirm a call with the FmcPhone
   * @param delay {Number} defines the delay before the FmcPhone is called
   * @param fmcSchedule {Array.<module:model/TimeFrame>} List of TimeFrames that define when this FmcPhone is called
   * @param id {String} the Id of the FmcPhone
   * @param _number {String} the number that will be called
   */
  var exports = function(active, confirm, delay, fmcSchedule, id, _number) {
    var _this = this;

    _this['active'] = active;
    _this['confirm'] = confirm;
    _this['delay'] = delay;
    _this['fmcSchedule'] = fmcSchedule;
    _this['id'] = id;
    _this['number'] = _number;

  };

  /**
   * Constructs a <code>FmcPhone</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/FmcPhone} obj Optional instance to populate.
   * @return {module:model/FmcPhone} The populated <code>FmcPhone</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('active')) {
        obj['active'] = ApiClient.convertToType(data['active'], 'Boolean');
      }
      if (data.hasOwnProperty('confirm')) {
        obj['confirm'] = ApiClient.convertToType(data['confirm'], 'Boolean');
      }
      if (data.hasOwnProperty('delay')) {
        obj['delay'] = ApiClient.convertToType(data['delay'], 'Number');
      }
      if (data.hasOwnProperty('fmcSchedule')) {
        obj['fmcSchedule'] = ApiClient.convertToType(data['fmcSchedule'], [TimeFrame]);
      }
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('number')) {
        obj['number'] = ApiClient.convertToType(data['number'], 'String');
      }
      if (data.hasOwnProperty('telephoneId')) {
        obj['telephoneId'] = ApiClient.convertToType(data['telephoneId'], 'String');
      }
    }
    return obj;
  }

  /**
   * whether this FmcPhone is activated or deactivated
   * @member {Boolean} active
   */
  exports.prototype['active'] = undefined;
  /**
   * whether the user must confirm a call with the FmcPhone
   * @member {Boolean} confirm
   */
  exports.prototype['confirm'] = undefined;
  /**
   * defines the delay before the FmcPhone is called
   * @member {Number} delay
   */
  exports.prototype['delay'] = undefined;
  /**
   * List of TimeFrames that define when this FmcPhone is called
   * @member {Array.<module:model/TimeFrame>} fmcSchedule
   */
  exports.prototype['fmcSchedule'] = undefined;
  /**
   * the Id of the FmcPhone
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * the number that will be called
   * @member {String} number
   */
  exports.prototype['number'] = undefined;
  /**
   * the Id of the corresponding telephone
   * @member {String} telephoneId
   */
  exports.prototype['telephoneId'] = undefined;



  return exports;
}));


